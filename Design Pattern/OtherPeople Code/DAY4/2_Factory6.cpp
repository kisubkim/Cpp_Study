﻿// 7_객체생성정리 - 118 page
class Rect
{
};

// 객체를 만드는 방법

// 0. Rect rc;		=> 수명이 정해져 있습니다.   {}을 벗어날때 파괴
//					=> 원할때 파괴 할수 없습니다.					

// 1. Rect* rc = new Rect   => 가장 자유로운 방법
//							=> 원할때 파괴 할수 있다.
//							=> 자유롭다는 것이 "좋다" 는 것은 아님.

// 초급시절에는 위 2가지 방법만 생각하는 경우가 많습니다.
// 코딩할때 아래 3개도 고려해 보세요



// 2. Rect* rc =  Rect::create()  : static 멤버 함수 사용
//									다양한 제약을 사용할수 있다.
// 
//				A. 오직 한개만 만들수 있게 -> 싱글톤
//				B. 속성이 동일하면 공유    => 플라이 웨이트
//			    C. 생성함수주소를 함수 인자로 전달하거나
//				   자료구조에 보관
//				D. 생성시 가상함수 호출 가능
//				java 에서는 기법이 너무 유명해서 이름을 붙였습니다.
//				"static factory method" 입니다.
//				디자인 패턴의 "factory method" 와는 다릅니다.(다음시간)



// 3. Rect* rc = r->clone();  : 복사본을 사용한 객체 생성 - Prototype



// 4. Rect* rc = factory.create() : 공장을 통한 객체 생성

